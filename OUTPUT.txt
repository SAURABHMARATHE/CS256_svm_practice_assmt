import svm_example
C:\Users\saura\AppData\Local\Enthought\Canopy\User\lib\site-packages\sklearn\cross_validation.py:44: DeprecationWarning: This module was deprecated in version 0.18 in favor of the model_selection module into which all the refactored classes and functions are moved. Also note that the interface of the new CV iterators are different from that of this module. This module will be removed in 0.20.
  "This module will be removed in 0.20.", DeprecationWarning)
C:\Users\saura\AppData\Local\Enthought\Canopy\User\lib\site-packages\sklearn\grid_search.py:43: DeprecationWarning: This module was deprecated in version 0.18 in favor of the model_selection module into which all the refactored classes and functions are moved. This module will be removed in 0.20.
  DeprecationWarning)

Shape of data =  (243L, 358L)
data[:,2] =  ['0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0'
 '1' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0'
 '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0'
 '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0'
 '0' '1' '1' '1' '1' '1' '1' '1' '1' '1' '1' '1' '1' '1' '1' '1' '1' '1'
 '1' '1' '1' '1' '1' '1' '1' '1' '1' '1' '1' '1' '1' '0' '0' '0' '1' '1'
 '1' '1' '1' '1' '1' '1' '1' '1' '1' '1' '1' '1' '0' '0' '1' '0' '0' '0'
 '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0'
 '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0'
 '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0'
 '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '1' '0' '0' '0' '0' '0' '0' '0'
 '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0'
 '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0'
 '0' '0' '0' '0' '0' '0' '0' '0' '0']


Starting the gridding process.

   Tuning SVM parameters for accuracy

C:\Users\saura\AppData\Local\Enthought\Canopy\User\lib\site-packages\sklearn\grid_search.py:426: ChangedBehaviorWarning: The long-standing behavior to use the estimator's score function in GridSearchCV.score has changed. The scoring parameter is now used.
  ChangedBehaviorWarning)

CLF SCORES: ===================================
accuracy : 0.81 (+/- 0.03)
===============================================
Best parameters set found on development set:

SVC(C=1, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape=None, degree=3, gamma=0.0, kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)


X_train shape = (218L, 355L)   y_train shape= (218L,)

clf.get_params(deep=True) = {'kernel': 'rbf', 'C': 10, 'verbose': False, 'probability': False, 'degree': 3.0, 'shrinking': True, 'max_iter': -1, 'decision_function_shape': None, 'random_state': None, 'tol': 0.001, 'cache_size': 200, 'coef0': 0.0, 'gamma': 1e-05, 'class_weight': None}
clf.score(X_test, y_test) = 76.0%
clf.predict(X_test) =  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
clf.decision_function(X_test) =  [-0.28488609 -1.08256391 -1.07524781 -0.22820759 -0.15611734 -0.90774379
 -0.24382076 -0.08850003 -1.09674457 -1.13160639 -1.27415073 -1.02610645
 -1.18475289 -1.05912758 -1.16197439 -1.24955744 -1.17479173 -1.36157478
 -1.31358031 -1.04355027 -1.31580168 -1.23234904 -0.25339815 -1.11482116
 -1.07454516]
=======================
clf.score(X_train, y_train) = 82.11%
clf.predict(X_train) =  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
clf.decision_function(X_train) =  [-1.07138988 -1.25895115 -1.13419165 -0.99982784 -1.27108206 -1.31349021
 -1.02502939 -0.09244969 -0.43497645 -0.30351367 -0.78866401 -1.39758579
 -0.968644   -0.99500327 -1.08795276 -1.33148898 -1.08566052 -0.10108497
 -0.63043174 -0.16824578 -1.0149384  -0.04500581 -0.97124423 -1.32351787
 -1.18477393 -0.92702918 -1.08677782 -1.15706945 -0.39120259 -0.15634289
 -1.11398242 -1.03403704 -0.83248591 -1.05090341 -1.03358641 -1.02817664
 -1.2878744  -1.17804171 -1.00037893 -1.16234871 -1.26467691 -1.05065619
 -0.91263259 -0.16430655 -1.27228924 -0.05283512 -1.12435281 -0.33745139
 -1.06162199 -0.1403064  -1.07743248 -0.68910787 -1.03224763 -0.13003883
 -0.57779942 -1.25737942 -1.00493557 -0.80878557 -1.00878118 -1.00018517
 -1.30802009 -1.27387481 -1.22119387 -1.00660187 -1.01171359 -0.65694399
 -1.16452828 -1.05618622 -0.97539802 -1.20834927 -1.09638786 -1.21044547
  0.03485968 -1.28142257 -1.16690763 -0.86061296 -1.2784941  -0.11092382
 -1.09542972 -1.05233115 -0.96194657 -1.17014839 -1.03226951 -1.03970213
 -0.99967012 -1.23908528 -0.99993813 -1.12655143 -1.01535043 -1.06090599
 -1.32020053 -0.89821027 -1.00042356 -1.02324569 -0.80417414 -1.03302454
 -1.08996525 -1.07626166 -1.06115977 -0.97896425 -0.99972351 -0.1144234
 -0.97602888 -1.16317717 -1.27017931 -0.22210824 -0.81698701 -0.21130084
 -0.84662948 -0.32350397 -1.04893337 -1.32570468 -0.33111041 -1.077376
 -0.09648733 -0.25943943 -0.8629949  -1.12473078 -1.21857358 -0.34890945
 -1.26118822 -1.28665056 -1.000024   -1.25810777 -1.07575097 -0.24480533
 -0.20421672 -1.2401159  -1.24203896 -1.24708599 -0.95469632 -0.69129285
 -0.10912413 -1.06257275 -1.01007781 -1.30253928 -1.24424063 -1.3468278
 -1.05793314 -0.37952761 -1.21111545 -1.10958046 -0.02002234 -0.1948656
 -1.00153213 -1.02271724 -0.9599869  -0.90256111 -1.03886753 -0.58789339
 -1.34726632 -0.9998015  -1.42509514 -0.79392717 -1.36390195 -1.01755862
 -0.97859873 -1.00585897 -1.09031298 -1.00885709 -1.10993208 -1.23397182
 -1.11457191 -1.34136268 -0.92957515  0.06449242 -0.97713126 -1.0230671
 -1.20410597 -0.91630583 -1.23602366 -1.06262234 -1.31846583 -1.33086805
 -1.19047193 -1.16520489 -1.29682392 -1.00619805 -1.14419779 -0.97689684
 -1.18695273 -0.21438386 -0.22987604 -0.97870615 -1.02167998 -0.09076426
 -1.25625247 -1.25283629 -0.31124294 -0.9941214  -1.0830557  -1.19214863
 -0.15623321 -1.05587625 -1.14383466 -0.16790002 -1.08134921 -0.73981574
 -1.25946548 -1.14291164 -0.95189067 -1.0831759  -1.05246253 -0.11125538
 -1.38062808 -0.89159824 -0.16217375 -1.14695643 -1.21411435 -1.20700964
 -1.21469077 -1.35839193 -1.33796139 -0.52422998 -1.35971911 -0.38015625
 -1.29530108 -1.00002493]
=======================


#####################################
clf.support_ =  [  3  10  12  13  22  25  32  38  42  51  57  59  65  68  75  80  84  86
  91  92  94  99 100 102 106 108 116 122 130 131 146 147 149 151 153 156
 164 166 169 179 183 189 197 200 205 213 217   7   8   9  17  18  19  21
  28  29  43  45  47  49  53  54  72  77 101 105 107 109 112 114 115 119
 125 126 132 139 142 143 165 181 182 185 188 192 195 203 206 215]

len(clf.support_) =  88

clf.support_vectors_ =  [[ 0.51300117 -0.07051675 -0.05990337 ..., -0.54982664 -0.89459527
  -0.65484939]
 [-0.39891766 -0.35348646 -0.35480203 ..., -0.25698627 -0.49184094
  -0.20857583]
 [ 0.23942561  1.42266751  1.4220021  ...,  1.13292085  1.52193072
   1.44901169]
 ..., 
 [-0.94606887 -0.24224865 -0.24271117 ..., -0.53464232 -0.39115236
  -0.52734266]
 [-1.12845263 -0.09432144 -0.09476017 ..., -0.41154091 -0.18977519
  -0.14482246]
 [-0.94606887 -0.64906696 -0.6492778  ..., -0.76457624 -0.89459527
  -0.84610949]]

len(clf.support_vectors_) =  88

len(clf.support_vectors_[0]) =  355

clf.n_support_ =  [47 41]

clf.dual_coef_ =  [[ -2.63952233 -10.         -10.         -10.         -10.         -10.
  -10.          -2.34036376 -10.         -10.         -10.          -1.00198483
  -10.         -10.         -10.         -10.          -3.28873378
   -0.45557425 -10.          -9.42897822 -10.         -10.          -2.56044431
  -10.         -10.         -10.         -10.          -7.8924322  -10.
  -10.         -10.         -10.         -10.          -5.7204977  -10.
  -10.         -10.         -10.         -10.         -10.         -10.
  -10.         -10.         -10.         -10.         -10.          -4.67146861
   10.          10.          10.          10.          10.          10.
   10.          10.          10.          10.          10.          10.
   10.          10.          10.          10.          10.          10.
   10.          10.          10.          10.          10.          10.
   10.          10.          10.          10.          10.          10.
   10.          10.          10.          10.          10.          10.
   10.          10.          10.          10.          10.        ]]

clf.dual_coef_.shape =  (1L, 88L)

clf.dual_coef_[0] =  [ -2.63952233 -10.         -10.         -10.         -10.         -10.         -10.
  -2.34036376 -10.         -10.         -10.          -1.00198483 -10.         -10.
 -10.         -10.          -3.28873378  -0.45557425 -10.          -9.42897822
 -10.         -10.          -2.56044431 -10.         -10.         -10.         -10.
  -7.8924322  -10.         -10.         -10.         -10.         -10.
  -5.7204977  -10.         -10.         -10.         -10.         -10.         -10.
 -10.         -10.         -10.         -10.         -10.         -10.
  -4.67146861  10.          10.          10.          10.          10.          10.
  10.          10.          10.          10.          10.          10.          10.
  10.          10.          10.          10.          10.          10.          10.
  10.          10.          10.          10.          10.          10.          10.
  10.          10.          10.          10.          10.          10.          10.
  10.          10.          10.          10.          10.          10.          10.        ]

len(clf.dual_coef_[0]) =  88

clf.intercept_ =  [-1.25729764]
#####################################

Shape of data =  (60L, 358L)
data[:,2] =  ['1' '1' '1' '1' '1' '1' '1' '1' '1' '1' '1' '1' '1' '1' '1' '1' '1' '1'
 '1' '1' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0'
 '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0' '0'
 '0' '0' '0' '0' '0' '0']

clf.get_params(deep=True) = {'kernel': 'rbf', 'C': 10, 'verbose': False, 'probability': False, 'degree': 3.0, 'shrinking': True, 'max_iter': -1, 'decision_function_shape': None, 'random_state': None, 'tol': 0.001, 'cache_size': 200, 'coef0': 0.0, 'gamma': 1e-05, 'class_weight': None}
clf.score(X_test, y_test) = 66.66%
clf.predict(X_test) =  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
clf.decision_function(X_test) =  [-0.37237298 -0.47889476 -0.38174622 -0.37268479 -0.45545342 -0.12623043
 -0.42799733 -0.08069769 -0.25265304 -0.11285292 -0.24478463 -0.09793914
 -0.26071699 -0.29560889 -0.28086586 -0.51133695 -0.49667124 -0.28173491
 -0.42092902 -0.4104448  -1.17894377 -1.22227496 -1.31010952 -1.40304111
 -1.22387328 -1.26675728 -1.19140734 -1.34099485 -1.09985118 -1.56767457
 -0.81211644 -1.2619445  -1.30289307 -1.41948889 -1.30943886 -1.2753027
 -1.26798135 -1.35020357 -1.27736739 -1.40908783 -1.39760314 -1.27222962
 -1.37601566 -1.3949275  -1.27323722 -1.09988169 -1.11405236 -1.08063355
 -0.99032419 -0.87820404 -1.19153935 -1.13267668 -1.18604963 -1.19334561
 -1.18173587 -1.12570045 -1.15859138 -1.25163714 -1.22737374 -1.19281461]
=======================